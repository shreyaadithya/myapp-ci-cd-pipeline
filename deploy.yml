---
- name: Install and Configure Tomcat
  hosts: webservers
  become: yes
  vars:
    tomcat_version: 10.1.30
    tomcat_url: "https://dlcdn.apache.org/tomcat/tomcat-10/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz"
    artifactory_base: "https://trial6dfohe.jfrog.io/artifactory"

  tasks:
    - name: Update apt cache and install dependencies
      apt:
        update_cache: yes
        name:
          - openjdk-17-jdk
          - wget
          - curl
        state: present

    - name: Check if Tomcat directory exists
      stat:
        path: /opt/tomcat
      register: tomcat_dir

    - name: Check if Tomcat is installed (via systemd)
      systemd:
        name: tomcat
      register: tomcat_service
      ignore_errors: yes

    - name: Download Tomcat if not installed
      get_url:
        url: "{{ tomcat_url }}"
        dest: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"
        mode: '0755'
      when: not tomcat_dir.stat.exists

    - name: Extract Tomcat if not installed
      unarchive:
        src: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"
        dest: /opt/
        remote_src: yes
        owner: ubuntu
        group: ubuntu
      when: not tomcat_dir.stat.exists

    - name: Create Tomcat symlink if not installed
      file:
        src: "/opt/apache-tomcat-{{ tomcat_version }}"
        dest: /opt/tomcat
        state: link
        force: yes
        owner: ubuntu
        group: ubuntu
      when: not tomcat_dir.stat.exists

    - name: Check if server.xml exists before modifying
      stat:
        path: /opt/tomcat/conf/server.xml
      register: server_xml

    - name: Change Tomcat port to 8081
      replace:
        path: /opt/tomcat/conf/server.xml
        regexp: 'port="8080"'
        replace: 'port="8081"'
        backup: yes
      when: server_xml.stat.exists

    - name: Create Tomcat systemd service file
      copy:
        dest: /etc/systemd/system/tomcat.service
        content: |
          [Unit]
          Description=Apache Tomcat Web Application Container
          After=network.target

          [Service]
          Type=forking
          User=ubuntu
          Group=ubuntu
          Environment=JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
          Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid
          Environment=CATALINA_HOME=/opt/tomcat
          Environment=CATALINA_BASE=/opt/tomcat
          ExecStart=/opt/tomcat/bin/startup.sh
          ExecStop=/opt/tomcat/bin/shutdown.sh
          Restart=on-failure
          RestartSec=10

          [Install]
          WantedBy=multi-user.target
        owner: root
        group: root
        mode: '0644'

    - name: Set proper permissions on Tomcat directories
      file:
        path: /opt/tomcat
        owner: ubuntu
        group: ubuntu
        recurse: yes
      when: tomcat_dir.stat.exists

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Enable Tomcat service
      systemd:
        name: tomcat
        enabled: yes

    - name: Stop Tomcat service if running
      systemd:
        name: tomcat
        state: stopped
      ignore_errors: yes

    - name: Clean existing webapps
      file:
        path: /opt/tomcat/webapps/myapp.war
        state: absent
      ignore_errors: yes

    - name: Clean existing exploded deployment
      file:
        path: /opt/tomcat/webapps/myapp
        state: absent
      ignore_errors: yes

    - name: Download WAR file from Artifactory
      get_url:
        url: "{{ artifactory_base }}/libs-snapshot-local/myapp-1.0-SNAPSHOT.war"
        dest: /opt/tomcat/webapps/myapp.war
        mode: '0644'
        owner: ubuntu
        group: ubuntu
      ignore_errors: yes

    - name: Alternative WAR download (if above fails)
      get_url:
        url: "{{ artifactory_base }}/libs-release-local/myapp-1.0.war"
        dest: /opt/tomcat/webapps/myapp.war
        mode: '0644'
        owner: ubuntu
        group: ubuntu
      when: false  # Disabled for now, enable if you have release versions
      ignore_errors: yes

    - name: Start Tomcat service
      systemd:
        name: tomcat
        state: started

    - name: Wait for Tomcat to start
      wait_for:
        port: 8081
        delay: 10
        state: started
        timeout: 60

    - name: Check application health
      uri:
        url: "http://localhost:8081/myapp"
        method: GET
        status_code: 200
        timeout: 30
      register: deployment_result
      until: deployment_result.status == 200
      retries: 5
      delay: 10
      ignore_errors: yes

    - name: Show deployment status
      debug:
        msg: |
          Tomcat deployed on port 8081
          Application URL: http://{{ ansible_host }}:8081/myapp
          {% if deployment_result.status == 200 %}
          ✅ Application is responding correctly
          {% else %}
          ⚠️  Application might be starting up or having issues
          Check logs with: journalctl -u tomcat -f
          {% endif %}
