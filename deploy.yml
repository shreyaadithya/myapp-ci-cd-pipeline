#- hosts: webservers
  #become: yes
  #tasks:
    #- name: Stop Tomcat
      #systemd:
        #name: tomcat
        #state: stopped

    #- name: Copy WAR to Tomcat webapps
      #copy:
        #src: target/myapp-1.0.0.war
        #dest: /opt/tomcat/webapps/myapp.war
        #mode: '0644'

    #- name: Start Tomcat
      #systemd:
        #name: tomcat
        #state: started 


---
- name: Deploy Tomcat Application with systemd
  hosts: all
  become: yes

  vars:
    tomcat_version: 10.1.30
    tomcat_url: "https://archive.apache.org/dist/tomcat/tomcat-10/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz"
    tomcat_install_dir: /opt/tomcat
    tomcat_user: tomcat
    tomcat_group: tomcat
    tomcat_port: 8085   # âœ… Changed port

  tasks:
    - name: Ensure Java is installed
      apt:
        name: openjdk-17-jdk
        state: present
      when: ansible_os_family == "Debian"

    - name: Create Tomcat group
      group:
        name: "{{ tomcat_group }}"
        state: present

    - name: Create Tomcat user
      user:
        name: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"
        shell: /bin/false
        system: yes
        create_home: no

    - name: Create Tomcat installation directory
      file:
        path: "{{ tomcat_install_dir }}"
        state: directory
        mode: '0755'
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"

    - name: Download Tomcat archive
      get_url:
        url: "{{ tomcat_url }}"
        dest: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"

    - name: Extract Tomcat
      unarchive:
        src: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"
        dest: "{{ tomcat_install_dir }}"
        remote_src: yes
        creates: "{{ tomcat_install_dir }}/apache-tomcat-{{ tomcat_version }}"
      notify: Restart Tomcat

    - name: Set permissions on Tomcat directory
      file:
        path: "{{ tomcat_install_dir }}/apache-tomcat-{{ tomcat_version }}"
        state: directory
        recurse: yes
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"

    - name: Update Tomcat port in server.xml
      replace:
        path: "{{ tomcat_install_dir }}/apache-tomcat-{{ tomcat_version }}/conf/server.xml"
        regexp: 'port="8080"'
        replace: 'port="{{ tomcat_port }}"'
      notify: Restart Tomcat

    - name: Create systemd service for Tomcat
      copy:
        dest: /etc/systemd/system/tomcat.service
        content: |
          [Unit]
          Description=Apache Tomcat {{ tomcat_version }}
          After=network.target

          [Service]
          Type=forking

          User={{ tomcat_user }}
          Group={{ tomcat_group }}

          Environment="JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64"
          Environment="CATALINA_HOME={{ tomcat_install_dir }}/apache-tomcat-{{ tomcat_version }}"
          Environment="CATALINA_BASE={{ tomcat_install_dir }}/apache-tomcat-{{ tomcat_version }}"
          Environment="CATALINA_PID={{ tomcat_install_dir }}/apache-tomcat-{{ tomcat_version }}/temp/tomcat.pid"

          ExecStart={{ tomcat_install_dir }}/apache-tomcat-{{ tomcat_version }}/bin/startup.sh
          ExecStop={{ tomcat_install_dir }}/apache-tomcat-{{ tomcat_version }}/bin/shutdown.sh

          Restart=on-failure

          [Install]
          WantedBy=multi-user.target
      notify: Restart Tomcat

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Enable Tomcat service
      systemd:
        name: tomcat
        enabled: yes

    - name: Start Tomcat service
      systemd:
        name: tomcat
        state: started

  handlers:
    - name: Restart Tomcat
      systemd:
        name: tomcat
        state: restarted


